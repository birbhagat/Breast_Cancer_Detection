# -*- coding: utf-8 -*-
"""BreastCancerDetection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OBgX1uAbOs1kyInuRA33vy8zcAmFqIcg
"""

import numpy as np
import pandas as pd
import sklearn.datasets
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Collection & Preprcessing"""

#loading the data from sklearn
breast_cancer_dataset=sklearn.datasets.load_breast_cancer()

print(breast_cancer_dataset)

# loading the data into pandas dataframe
data_frame=pd.DataFrame(breast_cancer_dataset.data, columns=breast_cancer_dataset.feature_names)

#printing the first five rows
data_frame.head()

#adding the target column to data frame

data_frame['label']=breast_cancer_dataset.target

data_frame.tail()

data_frame.shape

data_frame.info()

#checking if there are some missing values or not
data_frame.isnull().sum()

# statistics about the data
data_frame.describe()

#checking the target variable
data_frame['label'].value_counts()

data_frame.groupby('label').mean()

#Separating Inputs and outputs
X=data_frame.drop(columns='label',axis=1)
Y=data_frame['label']

print(X)

print(Y)

"""Splitting the data into training and testing data"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)

"""Model Training(Logistic Regression)"""

model=LogisticRegression()

# training the model with training data
model.fit(X_train,Y_train)

"""Model Evaluation

Accuracy score
"""

# Accuracy training data
X_train_prediction=model.predict(X_train)
training_data_accuracy=accuracy_score(Y_train,X_train_prediction)

print('training data accuracy =',training_data_accuracy)

# Accuracy test data
X_test_prediction=model.predict(X_test)
test_data_accuracy=accuracy_score(Y_test,X_test_prediction)

print('test data accuracy=',test_data_accuracy)

"""Developing a system for making predictions"""

input_data = (18.61	,20.25,	122.1,	1094,	0.0944,	0.1066,	0.149,	0.07731,	0.1697,	0.05699,	0.8529,	1.849,	5.632,	93.54,	0.01075,	0.02722,	0.05081,	0.01911,	0.02293,	0.004217,	21.31,	27.26,	139.9,	1403,	0.1338,	0.2117,	0.3446,	0.149,	0.2341,	0.07421
)

#changing into numpy array
input_data_as_numpy_array=np.asarray(input_data)

#reshaping the numpy array as we are predicting one data point
input_data_reshaped=input_data_as_numpy_array.reshape(1,-1)

prediction=model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]==0):
  print('The Breast cancer is malignant')
else:
  print('Th Breast cancer is Benign')

















